FROM ubuntu:16.04

RUN set -x && \
    env && \
    apt-get update && \
true
RUN set -x && \
    ###
    ### メンテとjenkins-slaveに必要なものを導入
    ###
    apt-get install -y git vim && \
    # openjdk-8-jre の依存パッケージについて、プロキシタイムアウトするので予めinstallしてみる。
    #apt-get install -y ca-certificates-java dbus dbus-x11 fontconfig fontconfig-config && \
    #apt-get install -y fonts-dejavu-core fonts-dejavu-extra gconf-service gconf-service-backend && \
    #apt-get install -y gconf2 gconf2-common hicolor-icon-theme java-common libasound2 && \
    #apt-get install -y libasound2-data libasyncns0 libatk1.0-0 libatk1.0-data libavahi-client3 && \
    #apt-get install -y libavahi-common-data libavahi-common3 libavahi-glib1 libbonobo2-0 && \
    #apt-get install -y libbonobo2-common libcairo2 libcanberra0 libcap-ng0 libcups2 libdatrie1 && \
    #apt-get install -y libgtk2.0-common libharfbuzz0b libicu55 libjbig0 libjpeg-turbo8 libjpeg8 && \
true
RUN set -x && \
    apt-get install -y openjdk-8-jre && \
true
RUN set -x && \
    apt-get install -y openssh-client openssh-server && \
true
RUN set -x && \
    ###
    ### Docker 導入
    ###
    apt-get install -y --no-install-recommends \
      apt-transport-https \
      wget \
      software-properties-common \
      ca-certificates \
      && \
true
RUN set -x && \
    #
    # プロキシによっては自己署名証明書なので --no-check-certificate を付与
    #
    wget -q --no-check-certificate 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xee6d536cf7dc86e2d7d56f59a178ac6c6238f52e' -O - \
      | apt-key add - \
      && \
    add-apt-repository "deb https://packages.docker.com/1.13/apt/repo/ ubuntu-$(lsb_release -cs) main" && \
    #
    # どうしてもうまくいかないので、packages.docker.com相手はチェックをやめる
    #
    #echo 'Acquire::https::packages.docker.com::Verify-Peer "false";' >> /etc/apt/apt.conf && \
    apt-get update && \
true
RUN set -x && \
    # docker-engin の依存パッケージについて、プロキシタイムアウトするので予めinstallしてみる。
    #apt-get install -y apparmor aufs-tools busybox-initramfs cgroupfs-mount cpio git git-man && \
    #apt-get install -y ifupdown initramfs-tools initramfs-tools-bin initramfs-tools-core iproute2 && \
    #apt-get install -y iptables isc-dhcp-client isc-dhcp-common klibc-utils kmod less && \
    #apt-get install -y libapparmor-perl libatm1 libbsd0 libdns-export162 libedit2 liberror-perl && \
    #apt-get install -y libgdbm3 libisc-export160 libklibc libltdl7 libmnl0 libnfnetlink0 && \
    #apt-get install -y libperl5.22 libpopt0 libudev1 libx11-6 libx11-data libxau6 libxcb1 libxdmcp6 && \
    #apt-get install -y libxext6 libxmuu1 libxtables11 linux-base netbase openssh-client patch perl && \
    #apt-get install -y perl-modules-5.22 rename rsync udev xauth xz-utils && \
    apt-get install -y docker-engine && \
    ###
    ### レイヤを軽くする
    ###
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    ###
    ### 終了
    ###
    echo done.

RUN set -x && \
    ###
    ### Docker Compose 導入
    ###
    wget https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` -O /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose && \
    ###
    ### 終了
    ###
    echo done.

RUN set -x && \
    ###
    ### コンテナ設定
    ###
    echo root:dind | chpasswd && \
    ssh-keygen -A && \
    mkdir /var/run/sshd && \
    ###
    ### 終了
    ###
    echo done.

EXPOSE 22

CMD ["/usr/sbin/sshd" "-o" "PermitRootLogin yes" "-D"]
